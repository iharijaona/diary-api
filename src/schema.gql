# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""A country of the world"""
type Country {
  """Three-letter codes (ISO alpha-3) """
  alpha3Code: String!

  """Two-letter codes (ISO alpha-2)"""
  code: ID!

  """Currency code of the country"""
  currencyCode: String

  """The original country name"""
  name: String!

  """Country name in english"""
  name_en: String!

  """Nom du pay en français"""
  name_fr: String!

  """Nationalité en français"""
  nationality: String!

  """Nationality in english"""
  nationality_en: String!

  """Phone prefix of the country"""
  phonePrefix: String
}

input CountryOrderByInput {
  alpha2Code: EnumSortOrder
  alpha3Code: EnumSortOrder
  name: EnumSortOrder
  nationality: EnumSortOrder
}

"""Level of jurisdiction."""
enum EnumJurisdictionLevel {
  ADMINISTRATIVE_COURT
  ADMINISTRATIVE_LAW_COURT
  APPELLATE_COURT
  AUDIT_COURT
  CASSATION_COURT
  FISCAL_COURT
  SUPREME_COURT
  TRIAL_COURT
}

"""Type of location."""
enum EnumLocationType {
  DISTRICT
  MUNICIPALITY
  NEIGHBORHOOD
  PROVINCE
  REGION
}

"""The sort order."""
enum EnumSortOrder {
  asc
  desc
}

type JurisdictionInstance {
  """Hashed unique ID of the jurisdiction instance"""
  id: ID!

  """Jurisdiction level object"""
  level: JurisdictionLevel

  """Code of the jurisdiction level"""
  levelCode: EnumJurisdictionLevel!

  """Location object"""
  location: Location

  """Hashed unique ID of the location"""
  locationId: ID!

  """Name of the jurisdiction instance"""
  name: String!
}

input JurisdictionInstanceOrderByInput {
  levelCode: EnumSortOrder
  name: EnumSortOrder
}

type JurisdictionLevel {
  """Unique identifier of the jurisdiction level"""
  code: EnumJurisdictionLevel!

  """Name of the jurisdiction level"""
  name: String!

  """Short name of the jurisdiction level: TPI, CC..."""
  shortName: String!
}

type Location {
  """Code of the location"""
  code: String

  """ID of the country (for STATE/PROVINCE)"""
  countryCode: ID

  """Hashed unique ID of the location"""
  id: ID!

  """Name of the location"""
  name: String!

  """Parent location ID"""
  parentId: ID
  subdivisions: [Location!]!

  """Type of the location"""
  type: EnumLocationType!
}

input LocationOrderByInput {
  code: EnumSortOrder
  id: EnumSortOrder
  name: EnumSortOrder
}

"""Paginated country list"""
type PaginatedCountry {
  currentPage: Int!
  nodes: [Country!]
  pageSize: Int!
  totalItemCount: Int!
  totalPageCount: Int!
}

"""Paginated jurisdiction instance list"""
type PaginatedJurisdictionInstance {
  currentPage: Int!
  nodes: [JurisdictionInstance!]
  pageSize: Int!
  totalItemCount: Int!
  totalPageCount: Int!
}

"""Paginated location list"""
type PaginatedLocation {
  currentPage: Int!
  nodes: [Location!]
  pageSize: Int!
  totalItemCount: Int!
  totalPageCount: Int!
}

type Query {
  countries(filter: String, orderBy: CountryOrderByInput, skip: Int! = 0, take: Int! = 100): PaginatedCountry!
  country(code: ID!): Country!
  jurisdictionInstance(id: ID!): JurisdictionInstance!
  jurisdictionInstances(
    filter: String

    """Code of the jurisdiction level"""
    levelCode: EnumJurisdictionLevel

    """Hashed unique ID of the location"""
    locationId: ID
    orderBy: JurisdictionInstanceOrderByInput
    skip: Int! = 0
    take: Int! = 100
  ): PaginatedJurisdictionInstance!
  jurisdictionLevel(code: EnumJurisdictionLevel!): JurisdictionLevel!
  jurisdictionLevels: [JurisdictionLevel!]!
  location(id: ID!): Location!
  locations(countryCode: ID, filter: String, orderBy: LocationOrderByInput, parentId: ID, skip: Int! = 0, take: Int! = 100, type: EnumLocationType): PaginatedLocation!
}